<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--************************************************************************-->
<!--* JavaScript Crunchinator Demo                                         *-->
<!--*                                                                      *-->
<!--* Copyright 2001 by Mike Hall                                          *-->
<!--* Please see http://www.brainjar.com for terms of use.                 *-->
<!--************************************************************************-->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>BrainJar.com: JavaScript Crunchinator Demo</title>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<link href="default.css" rel="stylesheet" type="text/css" />
<style type="text/css">

/* Superfluous stylings for the form. */

input, textarea {
  background-color: #d0f0f0;
  border-color: #00d0d0;
  border-width: 2px;
  padding: 2px;
  scrollbar-base-color: #00d0d0;
}

input.button {
  background-color: #00d0d0;
  border-color: #00d0d0;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10pt;
  font-weight: bold;
  padding: 0px;
  width: 5em;
}

table {
  border-color: #00f0f0 #009090 #009090 #00f0f0;
  border-style: solid;
  border-width: 2px;
  background-color: #00c0c0;
  padding: 4px;
}

td, th {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 10pt;
}

th {
  background-color: #008080;
  border-color: #000000;
  border-style: solid;
  border-width: 1px;
  color: #ffffff;
  padding-left: 8px;
  padding-right: 8px;
  text-align: left;
  width: auto;
}

</style>
<script type="text/javascript">//<![CDATA[

//*****************************************************************************
// Do not remove this notice.
//
// Copyright 2001 by Mike Hall.
// See http://www.brainjar.com for terms of use.
//
// Timing & statistic tweaks by Michael Lee, iskitzdev@yahoo.com.
//*****************************************************************************

var literalStrings   // For temporary storage of literal strings.
  , theForm;         // For access to GUI controls and fields.

function combineLiteralStrings(s) {

  var i;

  s = s.replace(/"\+"/g, "");
  updateStats(s);
  s = s.replace(/'\+'/g, "");

  return updateStats(s);
}

function compressWhiteSpace(s) {

  // Condense white space.

  s = s.replace(/\s+/g, " ");
  updateStats(s);
  s = s.replace(/^\s(.*)/, "$1");
  updateStats(s);
  s = s.replace(/(.*)\s$/, "$1");
  updateStats(s);

  // Remove uneccessary white space around operators, braces and parentices.

  s = s.replace(/\s([\x21\x25\x26\x28\x29\x2a\x2b\x2c\x2d\x2f\x3a\x3b\x3c\x3d\x3e\x3f\x5b\x5d\x5c\x7b\x7c\x7d\x7e])/g, "$1");
  updateStats(s);
  s = s.replace(/([\x21\x25\x26\x28\x29\x2a\x2b\x2c\x2d\x2f\x3a\x3b\x3c\x3d\x3e\x3f\x5b\x5d\x5c\x7b\x7c\x7d\x7e])\s/g, "$1");
  return updateStats(s);
}

function crunch(f) {

  // If this method was called by the form's submit event set f to the form.
  if(this != window) f = this;

  // If f is not a valid form element quit crunching.
  if(!f || typeof f.elements == "undefined")
    return "";

  // Get inputted script code.
  var code       = f.codeIn.value
    , isRealtime = f.realtime.checked;

  // Reset GUI.
  f.reset();
  f.codeIn.value = code;
  f.codeIn.onchange();
  f.realtime.checked = isRealtime;

  f.statusMsg.value = "Working...";
  var timeStart     = (new Date()).getTime();

  f.elements.statusMsg.value = "Replacing literal strings...";
  code = replaceLiteralStrings(code);

  f.elements.statusMsg.value = "Removing comments...";
  code = removeComments(code);

  f.elements.statusMsg.value = "Compressing white space...";
  code = compressWhiteSpace(code);

  f.elements.statusMsg.value = "Combining literal strings...";
  code = combineLiteralStrings(code);

  f.elements.statusMsg.value = "Restoring literal strings...";
  code = restoreLiteralStrings(code);

  var timeEnd       = (new Date()).getTime();
  var timeAlgo      = (timeEnd - timeStart) / 1000;
  f.statusMsg.value = "Crunched in ["+ timeAlgo + "] seconds.";
  
  return updateStats(code, true);
}

window.onload = function initialize()
{
   if(document.forms.length < 1) return;
   
   theForm                   = document.forms[0];
   theForm.btnSelect.onclick = function(){ theForm.codeOut.select(); theForm.codeOut.focus(); };
   theForm.codeIn.onchange   = function(){ theForm.sizeIn.value = Math.floor(theForm.codeIn.value.length / 1024) + " KB"; };
   theForm.onreset           = function(){ theForm.codeIn.focus(); return true; };
   theForm.onsubmit          = function(){ crunch(this); return false; };
   theForm.reset();
};

function removeComments(s) {

  var lines, i, t;

  // Remove '//' comments from each line.

  lines = s.split("\n");
  t = "";
  for (i = 0; i < lines.length; i++)
    t += lines[i].replace(/([^\x2f]*)\x2f\x2f.*$/, "$1");
  updateStats(t);

  // Replace newline characters with spaces.
  t = t.replace(/(.*)\n(.*)/g, "$1 $2");
  updateStats(t);

  // Remove '/* ... */' comments.

  lines = t.split("*/");
  t = "";
  for (i = 0; i < lines.length; i++)
    t += lines[i].replace(/(.*)\x2f\x2a(.*)$/g, "$1 ");

  return updateStats(t);
}

function replaceLiteralStrings(s) {

  var i, c, t, lines, escaped, quoteChar, inQuote, literal;

  literalStrings = new Array();
  t = "";

  // Split script into individual lines.

  lines = s.split("\n");
  for (i = 0; i < lines.length; i++) {

    j = 0;
    inQuote = false;
    while (j <= lines[i].length) {
      c = lines[i].charAt(j);

      // If not already in a string, look for the start of one.

      if (!inQuote) {
        if (c == '"' || c == "'") {
          inQuote = true;
          escaped = false;
          quoteChar = c;
          literal = c;
        }
       else
         t += c;
      }

      // Already in a string, look for end and copy characters.

      else {
        if (c == quoteChar && !escaped) {
          inQuote = false;
          literal += quoteChar;
          t += "__" + literalStrings.length + "__";
          literalStrings[literalStrings.length] = literal;
		  	 updateStats(t);
        }
        else if (c == "\\" && !escaped)
          escaped = true;
        else
          escaped = false;
        literal += c;
      }
      j++;
    }
    t += "\n";
    updateStats(t);
  }

  return updateStats(t);
}

function restoreLiteralStrings(s) {

  var i;

  for (i = 0; i < literalStrings.length; i++, updateStats(s))
    s = s.replace(new RegExp("__" + i + "__"), literalStrings[i]);

  return updateStats(s);
}

function updateStats(s, isDone)
{
   // Don't update stats if no input or realtime is off & crunching isn't done.
   if(!s || (!theForm.realtime.checked && !isDone))
      return s;

   theForm.sizeOut.value  = Math.floor(s.length / 1024) + " KB";
   theForm.sizeDiff.value = Math.floor((theForm.codeIn.value.length - s.length) /1024) + " KB";
   
   if(theForm.codeIn.value.length > 0)
      theForm.pctOut.value = 100 -
         Math.ceil(s.length / theForm.codeIn.value.length * 10000) / 100;
   
   return (!isDone ? s : (theForm.codeOut.value = s));
}
//]]></script>
</head>
<body>

<div id="demoBox">

<h3>JavaScript Crunchinator Demo</h3>

<p>You can condense JavaScript code using the form below. Just cut and paste
any script code into the text area marked 'Input', press the 'Crunch' button
and the condensed version will appear under 'Output.'</p>

<p>You can then use the 'Select' button to quickly highlight the output for
easy cut and paste into a new source file.</p>

<p>Use your browser's <code>View Source</code> option to see the full source
code.</p>

</div>

<p></p>

<form action="">

<table border="0">
<tr>
  <th colspan="3">Input</th>
</tr>
<tr>
  <td colspan="3"><textarea name="codeIn" rows="10" cols="80"></textarea></td>
</tr>
<tr>
  <td><b>Bytes:</b>  <input name="sizeIn"    type="text" size="10" disabled="disabled" /></td>
  <td><b>Status:</b> <input name="statusMsg" type="text" size="30" disabled="disabled" /></td>
  <td style="text-align:right;">
    <input class="button" type="submit" value="Crunch" />
    <input class="button" type="reset" value="Clear" />
  </td>
</tr>
</table>

<p></p>

<table border="0">
<tr>
  <th colspan="4">
     <span style="float:left;">Output</span>
     <label for="realtime" style="float:right;font-weight:normal;">Real-time Statistics</label>
     <input id="realtime" name="realtime" type="checkbox" style="background-color:transparent;float:right;" />
  </th>
</tr>
<tr>
  <td colspan="4"><textarea name="codeOut" rows="10" cols="80"></textarea></td>
</tr>
<tr>
  <td><b>Bytes:</b>   <input name="sizeOut"  type="text" size="10" disabled="disabled" /></td>
  <td><b>Saved:</b>   <input name="sizeDiff" type="text" size="10" disabled="disabled" /></td>
  <td><b>% Saved:</b> <input name="pctOut"   type="text" size="10" disabled="disabled" /></td>
  <td style="text-align:right;"><input name="btnSelect" class="button" type="button" value="Select" /></td>
</tr>
</table>

</form>

</body>
</html>
